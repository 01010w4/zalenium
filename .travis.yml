language: java
jdk:
  - oraclejdk8

sudo: required

services:
  - docker

jobs:
  include:
    - stage: Integration and Unit Tests
      env: step=sauceLabs
      script:
      - docker pull elgalu/selenium:3.5.3
      - travis_retry ./run_integration_tests.sh sauceLabs

    - env: step=browserStack
      script:
        - docker pull elgalu/selenium:3.5.3
        - travis_retry ./run_integration_tests.sh browserStack

    - env: step=dockerCompose
      script:
      - docker pull elgalu/selenium:3.5.3
      - curl -L https://github.com/docker/compose/releases/download/1.13.0/docker-compose-`uname -s`-`uname -m` > docker-compose
      - chmod +x docker-compose
      - sudo mv docker-compose /usr/local/bin
      - travis_retry ./run_integration_tests.sh dockerCompose

    - env: step=codacy-coverage
      script:
      - sudo apt-get install jq
      - wget -O ~/codacy-coverage-reporter-assembly-latest.jar $(curl https://api.github.com/repos/codacy/codacy-coverage-reporter/releases/latest | jq -r .assets[0].browser_download_url)
      - mvn clean package -Pcoverage-report
      # Report coverage results to Codecov
      - bash <(curl -s https://codecov.io/bash)
      # Report coverage results to Codacy
      - java -cp ~/codacy-coverage-reporter-assembly-latest.jar com.codacy.CodacyCoverageReporter -l Java -r ./target/site/jacoco/jacoco.xml

    - env: step=minikube
      script:
      - kubernetes/minikube-ci-initialize.sh
      - ./kubectl create -f kubernetes/serviceAccount.yaml
      - ./kubectl get serviceAccounts
      - ./kubectl create -f kubernetes/persistentVolume.yaml
      - ./kubectl get pv
      - ./kubectl create -f kubernetes/persistentVolumeClaim.yaml
      - ./kubectl get pvc
      - ./kubectl create -f kubernetes/zaleniumDeployment.yaml
      - ./kubectl get deployments
      - ./kubectl create -f kubernetes/service.yaml
      - ./kubectl get services
      - ./kubectl get svc zalenium -o go-template='{{.spec.clusterIP}}:{{ index (index .spec.ports 0) "nodePort" }}{{ "\n" }}'
      - ZALENIUM_URL = "./kubectl get svc zalenium -o go-template='{{.spec.clusterIP}}:{{ index (index .spec.ports 0) "nodePort" }}{{ "\n" }}'"
      - curl $ZALENIUM_URL

    - stage: Push Image (only with a tag)
      script:
      - ./gen-scm-source.sh
      - ./push_image.sh

branches:
  only:
    - master
    # Regular expression for release branches. E.g. -> 2.53.1a, 3.0.1a
    - /^([0-9]|[0-9][0-9])[.]([0-9]|[0-9][0-9])[.]([0-9]|[0-9][0-9])[a-z]$/